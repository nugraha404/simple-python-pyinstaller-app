node {
    try {
        stage('Build') {
            docker.image('python:2-alpine').inside {
                sh 'python -m py_compile sources/add2vals.py sources/calc.py'
            }
        }
        
        stage('Test') {
            docker.image('qnib/pytest').inside {
                sh 'py.test --verbose --junit-xml test-reports/results.xml sources/test_calc.py'
            }
            input message: 'Lanjutkan ke tahap Deploy? (Klik "Proceed" untuk melanjutkan eksekusi pipeline ke tahap deploy atau "Abort" untuk menghentikan eksekusi pipeline)'

        }
        
        stage('Deliver') {
            docker.image('minidocks/pyinstaller').inside {
                sh 'pyinstaller --onefile sources/add2vals.py'
            }
            sleep 60
        }
        
    } catch (Exception e) {
        currentBuild.result = 'FAILURE'
        echo "Build failed: ${e.message}"
        throw e
    } finally {
        stage('Post Actions') {
            // Always publish test results
            junit 'test-reports/results.xml'
            
            // Archive artifact if build is successful
            if (currentBuild.result == null || currentBuild.result == 'SUCCESS') {
                archiveArtifacts 'dist/add2vals'
            }
        }
    }
}
